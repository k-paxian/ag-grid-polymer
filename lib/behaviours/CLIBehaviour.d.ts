// ag-grid-polymer v0.0.5
export declare class CLIBehaviour extends polymer.Base {
    static UNIQUE_ID: string;
    static EVENT_SET_CURRENT_OPTIONS: string;
    static EVENT_SET_START_FROM: string;
    static EVENT_SET_TEXT: string;
    static EVENT_ON_CHANGE: string;
    static EVENT_ON_ENTER_KEY: string;
    static config: any;
    static INJECTED_FEATURE_PROPERTY_NAME: string;
    protected txtInput: HTMLInputElement;
    protected txtHint: HTMLInputElement;
    protected wrapper: HTMLDivElement;
    protected prompt: HTMLDivElement;
    protected dropDown: HTMLDivElement;
    protected spacer: HTMLSpanElement;
    protected leftSide: string;
    protected registerOnTextChangeOldValue: string;
    protected startFrom: number;
    protected rows: Array<any>;
    protected ix: number;
    protected oldIndex: number;
    protected currentOptions: Array<any>;
    apiOnSetText(e: CustomEvent): void;
    apiOnSetStartFrom(e: CustomEvent): void;
    apiOnSetCurrentOptions(e: CustomEvent): void;
    onGridReadyCLIBehaviour(e: CustomEvent): void;
    createStuff(): void;
    hideDropDown(): void;
    onTab(): void;
    onEnter(): void;
    onArrowDown(): void;
    onArrowUp(): void;
    protected handler(ev: Event): void;
    onChange(txt: string): void;
    protected registerEventListeners(): void;
    protected keyDownHandler(e: KeyboardEvent): void;
    protected calculateWidthForText(text: string): number;
    setText(text: string): void;
    getText(): string;
    repaint(): void;
    onmouseselection(text: string): void;
    onMouseOver(): void;
    onMouseOut(): void;
    onMouseDown(ev: MouseEvent): void;
    refresh(token: string, array: Array<any>): void;
    highlight(index: number): void;
    move(step: number): string;
    static injectFeatureToElement(element: Element, feature: CLIBehaviour): void;
    static getFeatureOutOfElement(element: Element): CLIBehaviour;
}
